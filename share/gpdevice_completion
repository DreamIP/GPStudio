# Debian gpdevice(8) completion                             -*- shell-script -*-

_gpdevice()
{
    local cur prev words cword
    _init_completion || return

    # see if the user selected a command already
    local COMMANDS=("new"          "showblock"
                    "generate"     "generatetop"  "generateslave" "generateprocess" "generatetb"
                    "addfile"      "delfile"      "showfile"
                    "addflow"      "delflow"      "showflow"      "renameflow"     "setflow"
                    "addparam"     "delparam"     "showparam"     "renameparam"    "setparam"    "fixparam"  "setpisizeaddr"
                    "addbitfield"  "delbitfield"  "showbitfield"  "renamebitfield" "setbitfield"
                    "addreset"     "delreset"     "showreset"     "renamereset"    "setreset"
                    "addclock"     "delclock"     "showclock"     "renameclock"    "setclock"
                    "addextport"   "delextport"   "showextport"
                    "addproperty"  "delproperty"  "showproperty"  "renameproperty" "setproperty" "setpropertymap"
                    "addenum"      "delenum"      "showenum"
                    "addcomponent" "delcomponent" "showcomponent"
                    "sethelp"      "setdraw"      "setcateg"      "categ"          "setinfo"     "info"
                    "convert"      "extract"      "help"
    )

    local command i
    for (( i=0; i < ${#words[@]}-1; i++ )); do
        if [[ ${COMMANDS[@]} =~ ${words[i]} ]]; then
            command=${words[i]}
            break
        fi
    done
    
    local count=${#words[@]};

    # supported options per command
    if [[ "$cur" == * ]]; then
        case $count in
            3)
                case $command in
                    generate|generatetop|generateslave|generateprocess|generatetb)
                        COMPREPLY=( $( compgen -W '-o' -- "$cur" ) )
                        return 0
                        ;;
                    addfile|delfile)
                        COMPREPLY=( $( compgen -W '-p' -- "$cur" ) )
                        return 0
                        ;;
                    new|addflow|delflow|renameflow|setflow|addparam|delparam|renameparam|setparam|fixparam|addbitfield|delbitfield|showbitfield|renamebitfield|setbitfield|addreset|delreset|renamereset|setreset|addclock|delclock|renameclock|setclock|addextport|delextport|showextport|addproperty|delproperty|showproperty|renameproperty|setproperty|setpropertymap|addenum|delenum|showenum|addcomponent|delcomponent|setinfo|info|extract)
                        COMPREPLY=( $( compgen -W '-n' -- "$cur" ) )
                        return 0
                        ;;
                    sethelp)
                        COMPREPLY=( $( compgen -W '-n -v' -- "$cur" ) )
                        return 0
                        ;;
                    setdraw)
                        COMPREPLY=( $( compgen -W '-v -f' -- "$cur" ) )
                        return 0
                        ;;
                    setpisizeaddr|setcateg)
                        COMPREPLY=( $( compgen -W '-v' -- "$cur" ) )
                        return 0
                        ;;
                    convert)
                        COMPREPLY=( $( compgen -W '-i' -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
            4)
                case $command in
                    addfile)
                        COMPREPLY=( $( compgen -A file -- "$cur" ) )
                        return 0
                        ;;
                    delfile)
                        COMPREPLY=( $( compgen -W '$( gpdevice listfile )' -- "$cur" ) )
                        return 0
                        ;;
                    delflow|renameflow|setflow)
                        COMPREPLY=( $( compgen -W '$( gpdevice listflow )' -- "$cur" ) )
                        return 0
                        ;;
                    delparam|renameparam|setparam|fixparam|showbitfield)
                        COMPREPLY=( $( compgen -W '$( gpdevice listparam )' -- "$cur" ) )
                        return 0
                        ;;
                    addbitfield)
                        COMPREPLY=( $( compgen -W '$( gpdevice listparamdot )' -- "$cur" ) ) && compopt -o nospace
                        return 0
                        ;;
                    delbitfield|renamebitfield|setbitfield)
                        COMP=$( gpdevice listword -w "$cur" -m bitfield) ; SPACE=$?
                        COMPREPLY=( $( compgen -W '$COMP' -- "$cur" ) )
                        [ $SPACE = 1 ] && compopt -o nospace
                        return 0
                        ;;
                    delreset|renamereset|setreset)
                        COMPREPLY=( $( compgen -W '$( gpdevice listreset )' -- "$cur" ) )
                        return 0
                        ;;
                    delclock|renameclock|setclock)
                        COMPREPLY=( $( compgen -W '$( gpdevice listclock )' -- "$cur" ) )
                        return 0
                        ;;
                    delproperty|renameproperty|setproperty)
                        COMP=$( gpdevice listword -w "$cur" -m property) ; SPACE=$?
                        COMPREPLY=( $( compgen -W '$COMP' -- "$cur" ) )
                        [ $SPACE = 1 ] && compopt -o nospace
                        return 0
                        ;;
                    generate|generatetop|generateslave|generateprocess|generatetb)
                        COMPREPLY=( $( compgen -o plusdirs -- "$cur" ) )
                        return 0
                        ;;
                    setdraw)
                        COMPREPLY=( $( compgen -A file -- "$cur" ) )
                        return 0
                        ;;
                    setinfo|info)
                        COMPREPLY=( $( compgen -W '$( gpdevice listinfo )' -- "$cur" ) )
                        return 0
                        ;;
                    convert)
                        COMPREPLY=( $( compgen -A file -- "$cur" ) )
                        return 0
                        ;;
                    addcomponent)
                        COMPREPLY=( $( compgen -W '$( gplib listcomponent )' -- "$cur" ) )
                        return 0
                        ;;
                    delcomponent)
                        COMPREPLY=( $( compgen -W '$( gpdevice listcomponent )' -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
            5) 
                case $command in
                    addfile)
                        COMPREPLY=( $( compgen -W '-t' -- "$cur" ) )
                        return 0
                        ;;
                    addflow|addreset|addclock)
                        COMPREPLY=( $( compgen -W '-d' -- "$cur" ) )
                        return 0
                        ;;
                    renameflow|renameparam|renamebitfield|renamereset|renameclock|renameproperty|sethelp|setpisizeaddr|setpropertymap|addenum)
                        COMPREPLY=( $( compgen -W '-v' -- "$cur" ) )
                        return 0
                        ;;
                    addparam)
                        COMPREPLY=( $( compgen -W '-t -r -v -m' -- "$cur" ) )
                        return 0
                        ;;
                    addbitfield|setbitfield)
                        COMPREPLY=( $( compgen -W '-b' -- "$cur" ) )
                        return 0
                        ;;
                    addproperty)
                        COMPREPLY=( $( compgen -W '-t' -- "$cur" ) )
                        return 0
                        ;;
                    setflow)
                        COMPREPLY=( $( compgen -W '-d -v' -- "$cur" ) )
                        return 0
                        ;;
                    setparam)
                        COMPREPLY=( $( compgen -W '-t -v -r' -- "$cur" ) )
                        return 0
                        ;;
                    setreset)
                        COMPREPLY=( $( compgen -W '-d -g' -- "$cur" ) )
                        return 0
                        ;;
                    setclock)
                        COMPREPLY=( $( compgen -W '-d -g -m -f -r' -- "$cur" ) )
                        return 0
                        ;;
                    setproperty)
                        COMPREPLY=( $( compgen -W '-l -t -v -r -s -c' -- "$cur" ) )
                        return 0
                        ;;
                    convert)
                        COMPREPLY=( $( compgen -W '-o' -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
            6)
                case $command in
                    addproperty|setproperty)
						if [ "$prev" = "-t" ]; then
							COMPREPLY=( $( compgen -W 'int sint bool group matrix enum' -- "$cur" ) )
						fi
						return 0
						;;
                    addextport|setextport)
						if [ "$prev" = "-t" ]; then
							COMPREPLY=( $( compgen -W 'in out inout' -- "$cur" ) )
						fi
						return 0
						;;
                    addclock|setclock|addreset|setreset|addflow|setflow)
						if [ "$prev" = "-d" ]; then
							COMPREPLY=( $( compgen -W 'in out' -- "$cur" ) )
						fi
						return 0
						;;
                    convert)
                        COMPREPLY=( $( compgen -A file -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
            7)
                case $command in
                    addfile)
                        COMPREPLY=( $( compgen -W '-g' -- "$cur" ) )
                        return 0
                        ;;
                    addflow|addextport)
                        COMPREPLY=( $( compgen -W '-s' -- "$cur" ) )
                        return 0
                        ;;
                    addreset|addclock)
                        COMPREPLY=( $( compgen -W '-g' -- "$cur" ) )
                        return 0
                        ;;
                    addparam)
                        COMPREPLY=( $( compgen -W '-t -r -v -m' -- "$cur" ) )
                        return 0
                        ;;
                    addbitfield)
                        COMPREPLY=( $( compgen -W '-m' -- "$cur" ) )
                        return 0
                        ;;
                    addproperty)
                        COMPREPLY=( $( compgen -W '-v -m' -- "$cur" ) )
                        return 0
                        ;;
                    addenum)
                        COMPREPLY=( $( compgen -W '-l' -- "$cur" ) )
                        return 0
                        ;;
                    setflow)
                        COMPREPLY=( $( compgen -W '-d -v' -- "$cur" ) )
                        return 0
                        ;;
                    setparam)
                        COMPREPLY=( $( compgen -W '-t -v -r' -- "$cur" ) )
                        return 0
                        ;;
                    setreset)
                        COMPREPLY=( $( compgen -W '-d -g' -- "$cur" ) )
                        return 0
                        ;;
                    setclock)
                        COMPREPLY=( $( compgen -W '-d -g -m -f -r' -- "$cur" ) )
                        return 0
                        ;;
                    setproperty)
                        COMPREPLY=( $( compgen -W '-l -t -v -r -s' -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
            8)
                case $command in
                    addproperty|setproperty)
						if [ "$prev" = "-t" ]; then
							COMPREPLY=( $( compgen -W 'int sint bool group matrix enum' -- "$cur" ) )
						fi
						return 0
						;;
                    addextport|setextport)
						if [ "$prev" = "-t" ]; then
							COMPREPLY=( $( compgen -W 'in out inout' -- "$cur" ) )
						fi
						return 0
						;;
                    addclock|setclock|addreset|setreset|addflow|setflow)
						if [ "$prev" = "-d" ]; then
							COMPREPLY=( $( compgen -W 'in out' -- "$cur" ) )
						fi
						return 0
						;;
                esac
                ;;
            9)
                case $command in
                    setparam)
                        COMPREPLY=( $( compgen -W '-t -v -r' -- "$cur" ) )
                        return 0
                        ;;
                    addproperty)
                        COMPREPLY=( $( compgen -W '-v -m' -- "$cur" ) )
                        return 0
                        ;;
                    setproperty)
                        COMPREPLY=( $( compgen -W '-l -t -v -r -s' -- "$cur" ) )
                        return 0
                        ;;
                    addparam)
                        COMPREPLY=( $( compgen -W '-t -r -v -m' -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
            10)
                case $command in
                    addproperty|setproperty)
						if [ "$prev" = "-t" ]; then
							COMPREPLY=( $( compgen -W 'int sint bool group matrix enum' -- "$cur" ) )
						fi
						return 0
						;;
                esac
                ;;
            11)
                case $command in
                    addproperty)
                        COMPREPLY=( $( compgen -W '-v -m' -- "$cur" ) )
                        return 0
                        ;;
                    addparam)
                        COMPREPLY=( $( compgen -W '-t -r -v -m' -- "$cur" ) )
                        return 0
                        ;;
                esac
                ;;
        esac
    fi

    # no command yet, show what commands we have
    if [ "$command" = "" ]; then
        COMPREPLY=( $( compgen -W '${COMMANDS[@]}' -- "$cur" ) )
    fi

    return 0
} &&
complete -F _gpdevice gpdevice

# ex: ts=4 sw=4 et filetype=sh
